/*
epd spi pins:
set pins to spi mode:

*/
#define AAA 0xbabe

.code 16
.word	0x20002000
.word	_start

.section .rodata
@ Look-up table for the epaper (90 bytes)
// const unsigned char WF_LUT[]={
.byte 0x82,0x00,0x00,0x00,0xAA,0x00,0x00,0x00
.byte 0xAA,0xAA,0x00,0x00,0xAA,0xAA,0xAA,0x00
.byte 0x55,0xAA,0xAA,0x00,0x55,0x55,0x55,0x55
.byte 0xAA,0xAA,0xAA,0xAA,0x55,0x55,0x55,0x55
.byte 0xAA,0xAA,0xAA,0xAA,0x15,0x15,0x15,0x15
.byte 0x05,0x05,0x05,0x05,0x01,0x01,0x01,0x01
.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
.byte 0x41,0x45,0xF1,0xFF,0x5F,0x55,0x01,0x00
.byte 0x00,0x00
.align 2, 255

.set GPIOA_MODER_RESET,		0xebfffcff
.set GPIOA_MODER_PA5OUT,	0xebfff4ff
.set GPIOA_MODER_PA0IN_PA5OUT,	0xebfff4fc

.text
.thumb_func
.global _start
_start:
	mov r0, #0
	mov r1, #255

	ldr r2, =0x4002102c	@ RCC_IOPENR
	ldr r3, [r2]
	add r3, r3, #1		@ enable port A clock
	strb r3, [r2]
	ldr r7, [r2]

	ldr r2, =0x50000000	@ GPIOA_MODER
	ldr r3, =GPIOA_MODER_PA0IN_PA5OUT
	strh r3, [r2]
	ldr r6, [r2]

loo:
	@ if button pressed, led high
	@ else led low

	ldr r2, =0x50000010	@ GPIOA_IDR
	ldr r3, [r2]
	mov r4, #1
	ldr r2, =0x50000014	@ GPIOA_ODR
	and r4, r3		@ PA5 low (or not)
beq lo				@ branch if Z flag set
	mov r4, #0x20		@ PA5 high
lo:	strb r4, [r2]
b loo

nop
.hword AAA
hang:	b .
